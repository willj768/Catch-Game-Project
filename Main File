let song;
let appleImg;
let basketImg;
let bombImg;
let circleX = 0;
let diameter = 90;

function preload(){
  appleImg = loadImage('images/apple.png')
  basketImg = loadImage('images/basket.png')
  bombImg = loadImage('images/bomb.png')
}
class Apple {
  constructor(x, y, size, speed, acceleration) {
    this.x = x;
    this.y = y;
    this.size = size;
    this.speed = speed;
    this.acceleration = acceleration;
  }
  
  move() {
    this.y += this.speed;
    this.speed += this.acceleration;
  }

  checkAppleY(ground) {
      if(ground <= this.y) {
        return true;
      } else {
        return false;
      }
    }
  
  checkAppleCollision() {
    
    let appleBottom = this.y + apple.size;
    let basketTop = basket.y;
    let basketLeft = basket.x;
    let basketRight = basket.x + basket.size;
    
    if (appleBottom >= basketTop && apple.x + apple.size > basketLeft && apple.x < basketRight) {
      return true;
    }
  }
  
  display() {
    image(appleImg,this.x,this.y,this.size,this.size)
  }
}
class Basket {
  constructor(x, y, size, speed) {
    this.x = x;
    this.y = y;
    this.size = size;
    this.speed = speed;
  }
  move(){
  if (keyIsDown(LEFT_ARROW)) {
    this.x -= 10;
  }else if (keyIsDown(RIGHT_ARROW)) {
    this.x += 10;
}}
  display(){
    image(basketImg,this.x,this.y,this.size,this.size)
  }  

}
class Bomb extends Apple {
  constructor(x, y, size, speed, acceleration) {
    super(x, y, size, speed, acceleration);
  }
  move() {
    this.y += this.speed;
    this.speed += this.acceleration;
  }
  
  checkBombY(ground) {
    if(ground <= this.y) {
        return true;
    } else {
      return false;
    }
  }
  
  checkBombCollision() {
    
    let bombBottom = this.y + bomb.size;
    let basketTop = basket.y;
    let basketLeft = basket.x;
    let basketRight = basket.x + basket.size;
    
    if (bombBottom >= basketTop && bomb.x + bomb.size > basketLeft && bomb.x < basketRight) {
      return true;
    }
  }
  
  display() {
    image(bombImg,this.x,this.y,this.size,this.size)
    
  }
  
}

let apple;
let basket;
let missed = 0;
let lives = 5;
let bombLives = 3;
let score = 0;
let ground = 800
let gameEnded = false;
let gameStarted = false;

function setup() {
  song = loadSound('8-bit-retro-game-music-233964.mp3')
  createCanvas(800, 800);
  basket = new Basket(100,750,50)
  apple = new Apple(random(20,780), 0, 30, 0, 0.09);
  bomb = new Bomb(random(20,780), -30, 30, 0, 0.1);
}

function draw() { 
 background(0,150,255)
 let grass = color(50,205,50)
 fill(grass);
 noStroke();
 rect(0,700,800,100)
 let sun = color(253,184,19);
 fill(sun)
 noStroke();
 circle(circleX,100,diameter)
 circleX = circleX + 0.5
 if (circleX>870)
    circleX = -60
  
  if(basket.x < 0)
    basket.x = 1
  else if (basket.x > 750)
    basket.x = 749
  
  if(gameEnded == false && gameStarted == true) {
    apple.display();
    apple.move();
    basket.display();
    basket.move();
    bomb.display();
    bomb.move();
    fill(255);
    textSize(20);
    text(`Lives: ${lives}`, 10, 50);
    text("Score: " + score, 700, 50);
    text("Missed: " + missed, 700, 100);
    text("Bomb Catches Left: " + bombLives, 600, 150);

    if(apple.checkAppleCollision()) {
      apple.y = -30;
      apple.x = random(20, 780);
      apple.speed = 0;
      score ++;
    } 

    if(apple.checkAppleY(ground)) {
        apple.y = 0;
        apple.x = random(20, 780);
        apple.speed = 0;
        lives --;
        missed++
      }
    
    if(bomb.checkBombCollision()) {
      bomb.y = 0;
      bomb.x = random(20, 780);
      bomb.speed = 0;
       bombLives--;
    } 
    
    if(lives == 0 || bombLives == 0) {
      gameEnded = true;
    }
    
    if(bomb.checkBombY(ground)) {
      bomb.y = -80;
      bomb.x = random(20, 780);
      bomb.speed = 0;
    }
    
    if(lives == 0 || bombLives == 0) {
      gameEnded = true;
    }
    
  } else if(gameEnded == true && gameStarted == true) {
    fill(255);
    textSize(20);
    text("Game Over! Your score was "+score+". Press 'R' to restart", 200, 400); 
  } else if(gameEnded == false && gameStarted == false) {
    fill(255);
    textSize(20);
    text("Use the arrow keys to catch the apples and avoid the bombs. Press 'S' to start", 50, 400);
  }
  
}

function mousePressed(){
  song.play()
}

function keyPressed() {
  if (gameEnded && (key === 'R' || key === 'r')) {
    gameEnded = false;
    gameStarted = false;
    lives = 5;
    score = 0;
    bombLives = 3;
    missed = 0;  // Reset missed counter
    apple = new Apple(random(20, 780), 0, 30, 0, 0.09);
    bomb = new Bomb(random(20, 780), -30, 30, 0, 0.1);
  }

  if (!gameStarted && (key === 'S' || key === 's')) {
    gameStarted = true;
  }
}
